<%- contentFor('body') %>
<div class="home-content">
    <h1>Modern tools for visualization and web application development (6 hours)</h1>

    <h3>Purpose of the work:</h3>
    <ul>
       <li>Deep dive into modern tools and libraries for creating interactive and visually appealing web applications.</li>
       <li>Practical application of the acquired knowledge to solve real-world problems of data visualization and web-interface development.</li>
       <li>Develop skills in working with different technologies and integrating them into a single project.</li>
    </ul>

    <h3>Tools needed:</h3>
    <ul>
        <li>Text editor: Visual Studio Code, Sublime Text</li>
        <li>Node.js and npm: To manage dependencies and get projects up and running</li>
        <li>Browser: Chrome, Firefox (recommended with development tools installed)</li>
        <li>Basic level of knowledge: HTML, CSS, JavaScript, React</li>
    </ul>

    <h3>Theoretical part:</h3>
    <ul>
        <li>Data Visualization</li>
        <ul>
            <li>D3.js: Deep analysis of library features, creating complex interactive visualizations.</li>
            <li>Altair: Declarative approach to creating visualizations, integration with Python.</li>
            <li>Vega-Lite: A high-level language for creating visualizations.</li>
        </ul>
        <li>3D visualization</li>
        <ul>
            <li>Three.js: Basics of working with 3D scenes, creating objects, materials, animation.</li>
            <li>React Three Fiber: Integrate Three.js into React to create interactive 3D components.</li>
        </ul>
        <li>PWA Development</li>
        <ul>
            <li>Service Workers: Manage caching, background tasks, push notifications.</li>
            <li>Manifest.json: PWA Configuration.</li>
            <li>Progressive Enhancement: Progressively improve user experience across devices and browsers.</li>
        </ul>
        <li>Additional topics</li>
        <ul>
            <li>WebAssembly: Using WebAssembly to speed up computation.</li>
            <li>GraphQL: An alternative to REST APIs for more flexible interaction with data.</li>
        </ul>
     </ul>

     <h3>Practical part:</h3>
     <ol>
        <li>Creating an interactive visualization with D3.js</li>
        <ul>
            <li>Select a data set (e.g., weather, economic, social media data).</li>
            <li>Create a complex visualization that combines multiple chart types (line charts, pie charts, cartograms).</li>
            <li>Implement interactive elements: tooltips, zooming, filtering, animation.</li>
        </ul>
        <li>Developing a 3D application with React Three Fiber</li>
        <ul>
            <li>Create a scene with multiple objects, implement animation and lighting.</li>
            <li>Add interactivity: camera rotation, changing materials of objects when interacting.</li>
            <li>Export the app to AR/VR format for viewing on appropriate devices.</li>
        </ul>
        <li>Developing PWAs using Service Workers</li>
        <ul>
            <li>Create an app with offline functionality (e.g., a news reader app).</li>
            <li>Implement caching of static resources and dynamic data.</li>
            <li>Implement interactive elements: tooltips, zooming, filtering, animation.</li>
            <li>Set up push notifications to inform the user of new events.</li>
        </ul>
     </ol>

    <h3>Evaluation Criteria:</h3>
    <ul>
        <li>Code quality: Structured, readable, use of modern practices.</li>
        <li>Functionality: Full implementation of all job requirements.</li>
        <li>Interactivity: Presence of interactive elements and animations.</li>
        <li>Optimization: Efficient use of browser resources, performance optimization.</li>
        <li>Documentation: Clear description of the solution, technologies and algorithms used.</li>
    </ul>

</div>